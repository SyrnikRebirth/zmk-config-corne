/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };

        hard_char {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <31 36>;
            layers = <1>;
            timeout-ms = <50>;
        };

        yo_char {
            bindings = <&kp GRAVE>;
            key-positions = <5 36>;
            layers = <1>;
            timeout-ms = <50>;
        };

        scha_char {
            bindings = <&kp O>;
            key-positions = <8 36>;
            layers = <1>;
            timeout-ms = <50>;
        };

        to_russian {
            bindings = <&to 1>;
            key-positions = <12 36>;
            layers = <0>;
            timeout-ms = <50>;
        };

        to_english {
            bindings = <&to 0>;
            key-positions = <12 36>;
            layers = <1>;
            timeout-ms = <50>;
        };
    };

    behaviors {
        ss_hs_modmorph: ss_hs_modmorph {
            compatible = "zmk,behavior-mod-morph";
            label = "SS_HS_MODMORPH";
            bindings = <&kp M>, <&kp RIGHT_BRACKET>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        kh_hs_tapdance: kh_hs_tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "KH_HS_TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp LEFT_BRACKET>, <&kp RIGHT_BRACKET>;
        };

        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <125>;
            bindings = <&kp>, <&kp>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E         &kp R           &kp T        &kp Y        &kp U          &kp I            &kp O    &kp P      &kp NON_US_BACKSLASH
&kp LEFT_SHIFT    &kp A  &kp S  &kp D         &kp F           &kp G        &kp H        &kp J          &kp K            &kp L    &kp SEMI   &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C         &kp V           &kp B        &kp N        &kp M          &kp COMMA        &kp DOT  &kp SLASH  &kp PRINTSCREEN
                                &kp LEFT_ALT  &lt 2 LEFT_WIN  &kp SPACE    &lt 3 ENTER  &kp BACKSPACE  &kp RIGHT_SHIFT
            >;
        };

        russian_layer {
            bindings = <
&trans  &kp Q  &kp W  &kp E   &kp R   &kp T     &kp Y   &kp U   &kp I      &kp O    &kp P      &kp NON_US_BACKSLASH
&trans  &kp A  &kp S  &kp D   &kp F   &kp G     &kp H   &kp J   &kp K      &kp L    &kp SEMI   &kp SQT
&trans  &kp Z  &kp X  &kp C   &kp V   &kp B     &kp N   &kp M   &kp COMMA  &kp DOT  &kp SLASH  &kp PRINTSCREEN
                      &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        nums_and_options {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp F1  &kp F2      &kp F3        &kp F4        &kp F5        &kp F6          &kp EQUAL     &kp NUMBER_7  &kp NUMBER_8  &kp N9        &none   &none
&kp F7  &kp F8      &kp F9        &kp F10       &kp F11       &kp F12         &kp MINUS     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &trans  &trans
&trans  &bt BT_CLR  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &kp NUMBER_0  &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &trans  &trans
                                  &trans        &trans        &trans          &trans        &trans        &trans
            >;
        };

        mouse_and_arrows {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &none  &none  &none   &none   &none     &kp PAGE_UP     &kp HOME        &kp END       &none            &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans  &none  &none  &none   &none   &none     &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &kp LEFT_BRACE    &kp RIGHT_BRACE
&trans  &none  &none  &none   &none   &none     &kp PAGE_DOWN   &none           &none         &none            &none             &none
                      &trans  &trans  &trans    &trans          &trans          &trans
            >;
        };
    };
};
